{"version":3,"sources":["webpack:///./openedx/features/course_experience/static/course_experience/js/CourseSock.js","webpack:///external \"jQuery\"?0cb8*"],"names":["CourseSock","$toggleActionButton","$","$verificationSock","$upgradeToVerifiedButton","pageLocation","window","location","href","indexOf","fixUpgradeButton","is","documentBottom","scrollTop","height","startFixed","offset","top","endFixed","distLeft","left","width","addClass","css","removeClass","length","scroll","resize","on","toggleSpeed","toggleClass","slideToggle","isOpening","hasClass","logMessage","Logger","log","from_page"],"mappings":";;;;;;;;;;AAAA;;AAEA,IAAaA,UAAb,GAA2B;AACzB,sBAAc;AAAA;;AACZ,MAAMC,sBAAsBC,EAAE,kCAAF,CAA5B;AACA,MAAMC,oBAAoBD,EAAE,6CAAF,CAA1B;AACA,MAAME,2BAA2BF,EAAE,gDAAF,CAAjC;AACA,MAAMG,eAAeC,OAAOC,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,YAA7B,IAA6C,CAAC,CAA9C,GACf,qBADe,GACS,WAD9B;;AAGA;AACA,MAAMC,mBAAmB,SAAnBA,gBAAmB,GAAM;AAC7B,QAAI,CAACN,yBAAyBO,EAAzB,CAA4B,UAA5B,CAAL,EAA8C;;AAE9C;AACA,QAAMC,iBAAiBV,EAAEI,MAAF,EAAUO,SAAV,KAAwBX,EAAEI,MAAF,EAAUQ,MAAV,EAA/C;;AAEA;AACA,QAAMC,aAAaZ,kBAAkBa,MAAlB,GAA2BC,GAA3B,GAAiC,GAApD;AACA,QAAMC,WAAYH,aAAaZ,kBAAkBW,MAAlB,EAAd,GAA4C,GAA7D;;AAEA;AACA,QAAMK,WAAYhB,kBAAkBa,MAAlB,GAA2BI,IAA3B,GAAkCjB,kBAAkBkB,KAAlB,EAAnC,IACZjB,yBAAyBiB,KAAzB,KAAmC,EADvB,CAAjB;;AAGA;AACA,QAAKT,iBAAiBG,UAAjB,IAA+BH,iBAAiBM,QAAjD,IACGhB,EAAEI,MAAF,EAAUe,KAAV,KAAoB,GAD3B,EACgC;AAC9BjB,+BAAyBkB,QAAzB,CAAkC,UAAlC;AACAlB,+BAAyBmB,GAAzB,CAA6B,MAA7B,EAAwCJ,QAAxC;AACD,KAJD,MAIO;AACL;AACAf,+BAAyBoB,WAAzB,CAAqC,UAArC;AACApB,+BAAyBmB,GAAzB,CAA6B,MAA7B,EAAqC,MAArC;;AAEA;AACA,UAAIX,iBAAiBG,UAArB,EAAiC;AAC/BX,iCAAyBkB,QAAzB,CAAkC,WAAlC;AACAlB,iCAAyBoB,WAAzB,CAAqC,cAArC;AACD,OAHD,MAGO,IAAIZ,iBAAiBM,QAArB,EAA+B;AACpCd,iCAAyBkB,QAAzB,CAAkC,cAAlC;AACAlB,iCAAyBoB,WAAzB,CAAqC,WAArC;AACD;AACF;AACF,GAjCD;;AAmCA;AACA,MAAIpB,yBAAyBqB,MAA7B,EAAqC;AACnCvB,MAAEI,MAAF,EAAUoB,MAAV,CAAiBhB,gBAAjB,EAAmCiB,MAAnC,CAA0CjB,gBAA1C;AACD;;AAED;AACAT,sBAAoB2B,EAApB,CAAuB,OAAvB,EAAgC,YAAM;AACpC,QAAMC,cAAc,GAApB;AACA5B,wBAAoB6B,WAApB,CAAgC,QAAhC,EAA0CA,WAA1C,CAAsD,eAAtD;AACA3B,sBAAkB4B,WAAlB,CAA8BF,WAA9B,EAA2CnB,gBAA3C;;AAEA;AACA,QAAMsB,YAAY/B,oBAAoBgC,QAApB,CAA6B,QAA7B,CAAlB;AACA,QAAMC,aAAaF,YAAY,oCAAZ,GACb,oCADN;AAEAG,WAAOC,GAAP,CACEF,UADF,EAEE;AACEG,iBAAWhC;AADb,KAFF;AAMD,GAfD;;AAiBAD,2BAAyBwB,EAAzB,CAA4B,OAA5B,EAAqC,YAAM;AACzCO,WAAOC,GAAP,CACE,2DADF,EAEE;AACEC,iBAAWhC;AADb,KAFF;AAMD,GAPD;AAQD,CA3EH,C;;;;;;;;ACFA,aAAa,mCAAmC,EAAE,I","file":"CourseSock.js","sourcesContent":["/* globals Logger */\n\nexport class CourseSock {  // eslint-disable-line import/prefer-default-export\n  constructor() {\n    const $toggleActionButton = $('.action-toggle-verification-sock');\n    const $verificationSock = $('.verification-sock .verification-main-panel');\n    const $upgradeToVerifiedButton = $('.verification-sock .action-upgrade-certificate');\n    const pageLocation = window.location.href.indexOf('courseware') > -1\n        ? 'Course Content Page' : 'Home Page';\n\n    // Behavior to fix button to bottom of screen on scroll\n    const fixUpgradeButton = () => {\n      if (!$upgradeToVerifiedButton.is(':visible')) return;\n\n      // Grab the current scroll location\n      const documentBottom = $(window).scrollTop() + $(window).height();\n\n      // Establish a sliding window in which the button is fixed\n      const startFixed = $verificationSock.offset().top + 320;\n      const endFixed = (startFixed + $verificationSock.height()) - 220;\n\n      // Assure update button stays in sock even when max-width is exceeded\n      const distLeft = ($verificationSock.offset().left + $verificationSock.width())\n        - ($upgradeToVerifiedButton.width() + 22);\n\n      // Update positioning when scrolling is in fixed window and screen width is sufficient\n      if ((documentBottom > startFixed && documentBottom < endFixed)\n          || $(window).width() < 960) {\n        $upgradeToVerifiedButton.addClass('attached');\n        $upgradeToVerifiedButton.css('left', `${distLeft}px`);\n      } else {\n        // If outside sliding window, reset to un-attached state\n        $upgradeToVerifiedButton.removeClass('attached');\n        $upgradeToVerifiedButton.css('left', 'auto');\n\n        // Add class to define absolute location\n        if (documentBottom < startFixed) {\n          $upgradeToVerifiedButton.addClass('stuck-top');\n          $upgradeToVerifiedButton.removeClass('stuck-bottom');\n        } else if (documentBottom > endFixed) {\n          $upgradeToVerifiedButton.addClass('stuck-bottom');\n          $upgradeToVerifiedButton.removeClass('stuck-top');\n        }\n      }\n    };\n\n    // Fix the sock to the screen on scroll and resize events\n    if ($upgradeToVerifiedButton.length) {\n      $(window).scroll(fixUpgradeButton).resize(fixUpgradeButton);\n    }\n\n    // Open the sock when user clicks to Learn More\n    $toggleActionButton.on('click', () => {\n      const toggleSpeed = 400;\n      $toggleActionButton.toggleClass('active').toggleClass('aria-expanded');\n      $verificationSock.slideToggle(toggleSpeed, fixUpgradeButton);\n\n      // Log open and close events\n      const isOpening = $toggleActionButton.hasClass('active');\n      const logMessage = isOpening ? 'User opened the verification sock.'\n          : 'User closed the verification sock.';\n      Logger.log(\n        logMessage,\n        {\n          from_page: pageLocation,\n        },\n      );\n    });\n\n    $upgradeToVerifiedButton.on('click', () => {\n      Logger.log(\n        'User clicked the upgrade button in the verification sock.',\n        {\n          from_page: pageLocation,\n        },\n      );\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./openedx/features/course_experience/static/course_experience/js/CourseSock.js","(function() { module.exports = window[\"jQuery\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 0\n// module chunks = 0 1 2"],"sourceRoot":""}